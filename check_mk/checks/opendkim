#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# this is an evaluation of opendkim monitoring for check_mk server
# https://github.com/tobiWu/monitoring/blob/master/check_mk/plugins/opendkim
#
# written by Tobias Wurzbacher 
# t.wurzbacher@mail.de
# 2019/07/19
#
# Example output from agent:
# <<<opendkim>>>
# opendkim-testkey: using default configfile /etc/opendkim.conf opendkim-testkey: checking key '19071901._domainkey.test.de' opendkim-testkey: key secure opendkim-testkey: key OK
# opendkim-testkey: using default configfile /etc/opendkim.conf opendkim-testkey: checking key '19071901._domainkey.false.de' opendkim-testkey: '19071901._domainkey.false.de' record not found


def inventory_opendkim(info):
    if info:
   	for line in info:
            yield (line[8], None)

def check_opendkim(item, _no_params, info):
   infotext = ''

   for line in info:
   	if item == line[8]:
	    # if testkey command output match
	    if "opendkim-testkey: key secure opendkim-testkey: key OK" in " ".join(line):
   	        infotext = "DKIM key %s could be validated." % (line[8])
                state = 0
	    elif "opendkim-testkey: key not secure opendkim-testkey: key OK" in " ".join(line):
   	        infotext = "DKIM signature %s could not be validated securly with DNSSEC." % (line[8])
      	        state = 1
	    else:
	        infotext = "DKIM key could not be validated: %s" % (" ".join(line[10:]))
      	        state = 2
	    yield state, infotext

check_info["opendkim"] = {
    'check_function'      : check_opendkim,
    'inventory_function'  : inventory_opendkim,
    'service_description' : 'OpenDKIM Keytest %s',
}

